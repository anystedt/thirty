package se.umu.id14ant.thirty.model;

import android.os.Parcel;
import android.os.Parcelable;

/**
 * Represents a score containing round number, scoring method and score.
 * @author Anna Nystedt.
 */
public class Score implements Parcelable{

    private int mRound;
    private int mScore;
    private String mScoringMethod;

    /**
     * Creates a score based on the given values.
     * @param round the number of the round.
     * @param score the score.
     * @param scoringMethod the used scoring method.
     */
    public Score(int round, int score, String scoringMethod){
        mRound = round;
        mScore = score;
        mScoringMethod = scoringMethod;
    }

    /**
     * Returns the number of the round.
     * @return the round.
     */
    public int getRound() {
        return mRound;
    }

    /**
     * Returns the score.
     * @return the score.
     */
    public int getScore() {
        return mScore;
    }

    /**
     * Returns the scoring method.
     * @return the scoring method.
     */
    public String getScoringMethod(){
        return mScoringMethod;
    }

    /**
     * {@inheritDoc}
     *
     * Auto-generated by Android Studio.
     */
    protected Score(Parcel in) {
        mRound = in.readInt();
        mScore = in.readInt();
        mScoringMethod = in.readString();
    }

    /**
     * Inner Class used for Parcelable
     *
     * Auto-generated by Android Studio.
     */
    public static final Creator<Score> CREATOR = new Creator<Score>() {
        @Override
        public Score createFromParcel(Parcel in) {
            return new Score(in);
        }

        @Override
        public Score[] newArray(int size) {
            return new Score[size];
        }
    };

    /**
     * {@inheritDoc}
     *
     * Auto-generated by Android Studio.
     */
    @Override
    public int describeContents() {
        return 0;
    }

    /**
     * {@inheritDoc}
     *
     * Auto-generated by Android Studio.
     */
    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(mRound);
        dest.writeInt(mScore);
        dest.writeString(mScoringMethod);
    }
}
